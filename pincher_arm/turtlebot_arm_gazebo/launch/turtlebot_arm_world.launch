<!-- Template from: https://github.com/MatthewVerbryke/inmoov_ros -->

<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="arm_type" default="$(optenv TURTLEBOT_ARM1 turtlebot)"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot_arm_gazebo)/worlds/turtlebot_arm.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find turtlebot_arm_description)/urdf_4gazebo/$(arg arm_type)_arm.urdf.xacro'"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model $(arg arm_type) -param robot_description"/>

  <!-- launch files -->
  <!-- load controllers for the arm and the gripper -->
  <include file="$(find turtlebot_arm_control)/launch/turtlebot_arm_control.launch"/>
  <!-- load moveit -->
  <include file="$(find turtlebot_arm_moveit_config_4gazebo)/launch/demo_planning.launch">
    <arg name="headless" value="$(arg headless)"/>
  </include>

</launch>
